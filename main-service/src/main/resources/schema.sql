drop table if exists categories cascade;
drop table if exists users cascade;
drop table if exists events cascade;
drop table if exists compilations cascade;
drop table if exists event_compilations cascade;


CREATE TABLE IF NOT EXISTS categories(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
category_name VARCHAR(255) NOT NULL UNIQUE);

CREATE TABLE IF NOT EXISTS users(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
user_name VARCHAR(255) NOT NULL,
email VARCHAR(255) NOT NULL UNIQUE);

CREATE TABLE IF NOT EXISTS locations(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
lat BIGINT NOT NULL,
lon BIGINT NOT NULL);

CREATE TABLE IF NOT EXISTS events(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
title VARCHAR(125) NOT NULL,
annotation VARCHAR(2005) NOT NULL,
confirmed_requests BIGINT,
event_date TIMESTAMP WITHOUT TIME ZONE,
paid bool DEFAULT NOT NULL,
created_on TIMESTAMP WITHOUT TIME ZONE,
published_on TIMESTAMP WITHOUT TIME ZONE,
description  VARCHAR(7005),
participant_limit BIGINT DEFAULT(0),
request_moderation bool DEFAULT(true),
state VARCHAR(125) NOT NULL,
location_id BIGINT NOT NULL,
category_id BIGINT NOT NULL,
initiator_id BIGINT NOT NULL,
CONSTRAINT category_id_in_events FOREIGN KEY (category_id) REFERENCES categories(id),
CONSTRAINT initiator_id_in_events FOREIGN KEY (initiator_id) REFERENCES users(id),
CONSTRAINT location_id_in_events FOREIGN KEY(location_id) REFERENCES locations(id));

CREATE TABLE IF NOT EXISTS compilations(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
title VARCHAR(255) NOT NULL UNIQUE,
pinned bool NOT NULL);

CREATE TABLE IF NOT EXISTS event_compilations(
compilations_id BIGINT NOT NULL,
events_id BIGINT NOT NULL,
CONSTRAINT compilation_id_in_compilations FOREIGN KEY (compilations_id) REFERENCES compilations(id),
CONSTRAINT event_id_in_compilations FOREIGN KEY (events_id) REFERENCES events(id),
CONSTRAINT unique_values_in_compilations UNIQUE (compilations_id, events_id));

CREATE TABLE IF NOT EXISTS requests(
id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
status VARCHAR(125) NOT NULL,
created TIMESTAMP WITHOUT TIME ZONE,
event_id BIGINT NOT NULL,
requester_id BIGINT NOT NULL,
CONSTRAINT event_id_in_requests FOREIGN KEY (event_id) REFERENCES events(id),
CONSTRAINT requester_id_in_requests FOREIGN KEY (requester_id) REFERENCES users(id),
CONSTRAINT unique_values_in_requests UNIQUE (requester_id, event_id));

